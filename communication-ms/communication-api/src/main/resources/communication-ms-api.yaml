openapi: 3.0.3
info:
  title: CoreMs Communication Service API
  description: |
    The Communication Service API allows users to send messages of various types, such as SMS, email, and Slack. It provides endpoints to send message, retrieve messages by ID, and fetch a list of messages based on various parameters.
    
    Authentication is required to access the API endpoints. The API expects a Bearer JWT token in the Authorization header for authentication.
  version: 1.0.0
tags:
  - name: Message
    description: Operations related to sending messages
paths:
  /messages/send:
    post:
      tags:
        - Messages
      summary: Send a message
      description: Send a notification of the specified type (sms, email, slack)
      operationId: sendNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'

  /messages:
    get:
      tags:
        - Messages
      summary: Get a list of notifications
      description: Retrieve a list of notifications of the specified type (sms, email, slack)
      operationId: getNotificationStatusList
      parameters:
        - $ref: '#/components/parameters/TypeParameter'
        - $ref: '#/components/parameters/UserIDParameter'
        - $ref: '#/components/parameters/FromDateParameter'
        - $ref: '#/components/parameters/ToDateParameter'
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'

components:
  schemas:
    MessageRequest:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - sms
            - slack
            - email
      discriminator:
        propertyName: type
        mapping:
          sms: "#/components/schemas/SmsRequest"
          email: "#/components/schemas/EmailRequest"
          slack: "#/components/schemas/SlackRequest"
          # chat: "#/components/schemas/ChatMessageRequest"

    SmsRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/MessageRequest"

    EmailRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/MessageRequest"
        - required:
            - emailType
            - subject
            - sender
            - recipient
            - body
        - properties:
            emailType:
              type: string
              default: TXT
              enum:
                - TXT
                - HTML
              description: Email type HTML or TXT
            cc:
              type: string
              description: Email addresses(comma separated) to include in CC
            bcc:
              type: string
              description: Email addresses(comma separated) to include in BCC
            sender:
              type: string
              description: Sender's email address
            senderName:
              type: string
              description: Sender's name
            subject:
              type: string
              description: Subject of the email message
            recipient:
              type: string
              description: Recipient's address
            body:
              type: string
              description: Body content of the message

    SlackRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/MessageRequest"
        - required:
            - channel
            - message
        - properties:
            channel:
              type: string
              description: Slack channel
            message:
              type: string
              description: Slack message

    MessageResponse:
      type: object
      properties:
        id:
          type: string
          description: ID of the message
        type:
          type: string
          description: Type of the message (sms, email, slack)
        status:
          type: string
          description: Status of the message
        createdAt:
          type: string
          format: date-time
          description: Creation date of the message
        data:
          $ref: '#/components/schemas/MessageRequest'

    Error:
      type: object
      properties:
        ReasonCode:
          type: string
          description: Reason code for the error
        Description:
          type: string
          description: Description of the error
        Details:
          type: string
          description: Details of the error
      required:
        - ReasonCode
        - Description
        - Details

    ErrorList:
      type: array
      items:
        $ref: '#/components/schemas/Error'

    ErrorWrapper:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/ErrorList'
      required:
        - errors

  parameters:
    TypeParameter:
      name: type
      in: query
      required: false
      description: Type of the message (sms, email, slack)
      schema:
        type: string
        enum:
          - sms
          - email
          - slack
    UserIDParameter:
      name: userId
      in: query
      required: false
      description: User ID to filter messages
      schema:
        type: string
    FromDateParameter:
      name: fromDate
      in: query
      required: false
      description: Start date to filter messages (inclusive)
      schema:
        type: string
        format: date-time
    ToDateParameter:
      name: toDate
      in: query
      required: false
      description: End date to filter messages (inclusive)
      schema:
        type: string
        format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
